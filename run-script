#!/bin/bash
# Script runner for Docker environment
# Usage: ./run-script <script_name> [env]
# env: dev (default) or prod

if [ $# -eq 0 ]; then
    echo "Usage: $0 <script_name> [env]"
    echo "  env: dev (default) or prod"
    echo ""
    echo "Available scripts:"
    ls app/scripts/
    exit 1
fi

SCRIPT_NAME="$1"
ENV="${2:-dev}"  # Default to dev if not specified

# Check if script exists
if [ ! -f "app/scripts/$SCRIPT_NAME" ]; then
    echo "Script 'app/scripts/$SCRIPT_NAME' not found!"
    echo "Available scripts:"
    ls app/scripts/
    exit 1
fi

# Determine which env file to use
if [ "$ENV" = "prod" ]; then
    ENV_FILE=".env.prod"
elif [ "$ENV" = "dev" ]; then
    ENV_FILE=".env.dev"
else
    echo "Invalid environment: $ENV. Use 'dev' or 'prod'"
    exit 1
fi

# Check if it's a populate script (these only need DB, not app container)
if [[ "$SCRIPT_NAME" == populate_* ]]; then
    # For populate scripts, run in a temporary container with docker compose run
    if [ "$ENV" = "dev" ]; then
        # Check if local DB is running
        if ! docker ps --format '{{.Names}}' | grep -q "^heal_butterflies_db$"; then
            echo "Error: Database container 'heal_butterflies_db' is not running!"
            echo "Start it with: docker compose up db"
            exit 1
        fi
        SERVICE="app"
    else
        SERVICE="app-prod"
    fi

    echo "Running script: $SCRIPT_NAME (environment: $ENV)"
    docker compose run --rm "$SERVICE" python3 "/app/scripts/$SCRIPT_NAME"
else
    # For other scripts, run in app container
    CONTAINER_NAME="heal_butterflies_app_prod"
    if [ "$ENV" = "dev" ]; then
        CONTAINER_NAME="heal_butterflies_app_dev"
    fi

    # Check if container is running
    if ! docker ps --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
        echo "Error: Container '$CONTAINER_NAME' is not running!"
        if [ "$ENV" = "dev" ]; then
            echo "Start it with: docker compose up app"
        else
            echo "Start it with: docker compose up app-prod"
        fi
        exit 1
    fi

    echo "Running script: $SCRIPT_NAME (environment: $ENV, container execution)"
    docker exec "$CONTAINER_NAME" python3 "/app/scripts/$SCRIPT_NAME"
fi